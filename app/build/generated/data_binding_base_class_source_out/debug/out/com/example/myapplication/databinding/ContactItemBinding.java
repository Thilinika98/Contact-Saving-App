// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContactItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView deleteButton;

  @NonNull
  public final TextView discView;

  @NonNull
  public final TextView fNameView;

  @NonNull
  public final TextView lNameView;

  @NonNull
  public final TextView phoneView;

  @NonNull
  public final ImageView updateButton;

  private ContactItemBinding(@NonNull CardView rootView, @NonNull ImageView deleteButton,
      @NonNull TextView discView, @NonNull TextView fNameView, @NonNull TextView lNameView,
      @NonNull TextView phoneView, @NonNull ImageView updateButton) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.discView = discView;
    this.fNameView = fNameView;
    this.lNameView = lNameView;
    this.phoneView = phoneView;
    this.updateButton = updateButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ContactItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContactItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.contact_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContactItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      ImageView deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.discView;
      TextView discView = ViewBindings.findChildViewById(rootView, id);
      if (discView == null) {
        break missingId;
      }

      id = R.id.fNameView;
      TextView fNameView = ViewBindings.findChildViewById(rootView, id);
      if (fNameView == null) {
        break missingId;
      }

      id = R.id.lNameView;
      TextView lNameView = ViewBindings.findChildViewById(rootView, id);
      if (lNameView == null) {
        break missingId;
      }

      id = R.id.phoneView;
      TextView phoneView = ViewBindings.findChildViewById(rootView, id);
      if (phoneView == null) {
        break missingId;
      }

      id = R.id.updateButton;
      ImageView updateButton = ViewBindings.findChildViewById(rootView, id);
      if (updateButton == null) {
        break missingId;
      }

      return new ContactItemBinding((CardView) rootView, deleteButton, discView, fNameView,
          lNameView, phoneView, updateButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
